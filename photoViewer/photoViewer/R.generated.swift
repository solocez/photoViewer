//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.string` struct is generated, and contains static references to 1 localization tables.
  struct string {
    /// This `R.string.loc` struct is generated, and contains static references to 8 localization keys.
    struct loc {
      /// Value: Alert
      static let alert = Rswift.StringResource(key: "alert", tableName: "Loc", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Cancel
      static let cancel = Rswift.StringResource(key: "cancel", tableName: "Loc", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Done
      static let done = Rswift.StringResource(key: "done", tableName: "Loc", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Downloading items
      static let downloadingItems = Rswift.StringResource(key: "downloading.items", tableName: "Loc", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Enter Title here
      static let enterTitleHere = Rswift.StringResource(key: "enter.title.here", tableName: "Loc", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Error
      static let error = Rswift.StringResource(key: "error", tableName: "Loc", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Ok
      static let ok = Rswift.StringResource(key: "ok", tableName: "Loc", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Unknown
      static let unknown = Rswift.StringResource(key: "unknown", tableName: "Loc", bundle: R.hostingBundle, locales: [], comment: nil)
      
      /// Value: Alert
      static func alert(_: Void = ()) -> String {
        return NSLocalizedString("alert", tableName: "Loc", bundle: R.hostingBundle, comment: "")
      }
      
      /// Value: Cancel
      static func cancel(_: Void = ()) -> String {
        return NSLocalizedString("cancel", tableName: "Loc", bundle: R.hostingBundle, comment: "")
      }
      
      /// Value: Done
      static func done(_: Void = ()) -> String {
        return NSLocalizedString("done", tableName: "Loc", bundle: R.hostingBundle, comment: "")
      }
      
      /// Value: Downloading items
      static func downloadingItems(_: Void = ()) -> String {
        return NSLocalizedString("downloading.items", tableName: "Loc", bundle: R.hostingBundle, comment: "")
      }
      
      /// Value: Enter Title here
      static func enterTitleHere(_: Void = ()) -> String {
        return NSLocalizedString("enter.title.here", tableName: "Loc", bundle: R.hostingBundle, comment: "")
      }
      
      /// Value: Error
      static func error(_: Void = ()) -> String {
        return NSLocalizedString("error", tableName: "Loc", bundle: R.hostingBundle, comment: "")
      }
      
      /// Value: Ok
      static func ok(_: Void = ()) -> String {
        return NSLocalizedString("ok", tableName: "Loc", bundle: R.hostingBundle, comment: "")
      }
      
      /// Value: Unknown
      static func unknown(_: Void = ()) -> String {
        return NSLocalizedString("unknown", tableName: "Loc", bundle: R.hostingBundle, comment: "")
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      // There are no resources to validate
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R {
  fileprivate init() {}
}
